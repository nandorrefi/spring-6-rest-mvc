spring.datasource.username=
spring.datasource.password=
spring.datasource.url=jdbc:mariadb://<ipaddress>/<db>?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
# https://www.jobyme88.com/?st_ai=spring-jpa-hibernate-ddl-auto
# update - The object model created based on the mappings (annotations or XML) is compared with the existing schema, and then Hibernate updates the schema
#          according to the diff. It never deletes the existing tables or columns even if they are no longer required by the application
# create - Hibernate first drops existing tables and then creates new tables.
# create-drop - similar to create, with the addition that Hibernate will drop the database after all operations are completed; typically used for unit testing
# validate - Hibernate only validates whether the tables and columns exist; otherwise, it throws an exception.
# none - This value effectively turns off the DDL generation.
spring.jpa.hibernate.ddl-auto=update

# --------------
# Hikari configs - In DBeaver Administer->SessionManager you can see the active sessions
# --------------
# It is recommended to go through the Hikari documentation regarding possible config options to optimize your busy services

spring.datasource.hikari.pool-name=RestDB-Pool
# Default is 10, keep this in mind if you are deploying a microservice architecture because too many session could overload the server
spring.datasource.hikari.maximum-pool-size=5

# --------------
# Log SQL
# --------------
spring.jpa.properties.hibernate.show_sql=true
spring.jpa.properties.hibernate.format_sql=true

# Show bind values in SQL log - DO NOT use it on a server with confidential data, only use it for debugging, it also slows down the system
logging.level.org.hibernate.orm.jdbc.bind=trace